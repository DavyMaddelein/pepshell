/*
 * Copyright 2014 Davy Maddelein.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.compomics.pepshellstandalone.dataloading.frames;

import com.compomics.pepshellstandalone.ProgramVariables;
import com.compomics.pepshellstandalone.dataloading.ExperimentFileSelectionPanel;
import com.compomics.pepshellstandalone.dataloading.MetaDataProviderDialog;
import com.compomics.pepshellstandalone.exceptionhandling.ExceptionEvent;

import javax.swing.*;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * @author Davy Maddelein
 */
public class FileSelectionFrame extends javax.swing.JFrame {

    private final MetaDataProviderDialog metaDataProviderDialog = new MetaDataProviderDialog(this, true);

    /**
     * Creates new form OfflineFileSelectionFrame
     */
    public FileSelectionFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.validate();
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addExperimentMetaDataButton = new javax.swing.JButton();
        referenceExperimentCheckBox = new javax.swing.JCheckBox();
        referenceFileBasedExperimentPanel1 = new com.compomics.pepshellstandalone.dataloading.ReferenceFileExperimentSelectionPanel();
        experimentFileBasedExperimentSelectionPanel1 = new com.compomics.pepshellstandalone.dataloading.ExperimentFileSelectionPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("select files");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(640, 206));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(480, 330));

        addExperimentMetaDataButton.setText("add metadata and validate ...");
        addExperimentMetaDataButton.addActionListener(this::addExperimentMetaDataButtonActionPerformed);

        referenceExperimentCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        referenceExperimentCheckBox.setSelected(true);
        referenceExperimentCheckBox.setText("reference experiment in separate file");
        referenceExperimentCheckBox.addActionListener(this::referenceExperimentCheckBoxActionPerformed);

        referenceFileBasedExperimentPanel1.setPreferredSize(new java.awt.Dimension(378, 84));

        experimentFileBasedExperimentSelectionPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(referenceFileBasedExperimentPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(referenceExperimentCheckBox)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(experimentFileBasedExperimentSelectionPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(addExperimentMetaDataButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        )))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(referenceExperimentCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(referenceFileBasedExperimentPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(experimentFileBasedExperimentSelectionPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addExperimentMetaDataButton)
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void addExperimentMetaDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addExperimentMetaDataButtonActionPerformed

        //on request: condensed the old add metadata button and validate files button into one
        List<File> files = new ArrayList<>();
        files.addAll(experimentFileBasedExperimentSelectionPanel1.getExperimentFiles());
        metaDataProviderDialog.setLocationRelativeTo(this);
        if (referenceExperimentCheckBox.isSelected() && referenceFileBasedExperimentPanel1.getReferenceFile() != null) {
            metaDataProviderDialog.setFilesToAnnotate(referenceFileBasedExperimentPanel1.getReferenceFile(), files);
        } else {
            metaDataProviderDialog.setFilesToAnnotate(files);
        }
        metaDataProviderDialog.setVisible(true);
        if (metaDataProviderDialog.getReferenceExperimentFile() != null) {
            referenceFileBasedExperimentPanel1.setReferenceFile(metaDataProviderDialog.getReferenceExperimentFile());
        }
        experimentFileBasedExperimentSelectionPanel1.setFiles(metaDataProviderDialog.getFiles());

        //metadata should be added, try and continue to validation, otherwise drop back to file selection

        if (referenceFileBasedExperimentPanel1.getReferenceFile() == null && referenceExperimentCheckBox.isSelected()) {
            JOptionPane.showMessageDialog(this, "no reference experiment is present, and the reference option was selected, Pepshell cannot continue");
        } else if (experimentFileBasedExperimentSelectionPanel1.getExperimentFiles().isEmpty()) {
            JOptionPane.showMessageDialog(this, "no experiments were selected, Pepshell cannot continue");
        } else {
            ValidationFrame frame;
            if (referenceExperimentCheckBox.isSelected()) {
                frame = new ValidationFrame(referenceFileBasedExperimentPanel1.getReferenceFile(), experimentFileBasedExperimentSelectionPanel1.getExperimentFiles());
            } else {
                frame = new ValidationFrame(experimentFileBasedExperimentSelectionPanel1.getExperimentFiles());
            }
            try {
                frame.setLocationRelativeTo(this);
                frame.setVisible(true);
                this.dispose();
            } catch (NullPointerException npe) {
                ProgramVariables.exceptionBus.post(new ExceptionEvent("could not create the validation window, continuing without validation",true));
                ExperimentSelectionFrame experimentFrame = new ExperimentSelectionFrame(referenceFileBasedExperimentPanel1.getReferenceFile(),experimentFileBasedExperimentSelectionPanel1.getExperimentFiles());
                experimentFrame.setLocationRelativeTo(this);
                experimentFrame.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_addExperimentMetaDataButtonActionPerformed


    private void referenceExperimentCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_referenceExperimentCheckBoxActionPerformed
        if (referenceExperimentCheckBox.isSelected()) {
            referenceFileBasedExperimentPanel1.setVisible(true);
            experimentFileBasedExperimentSelectionPanel1.setMode(ExperimentFileSelectionPanel.ALL_EXPERIMENTS);
        } else {
            referenceFileBasedExperimentPanel1.setVisible(false);
            experimentFileBasedExperimentSelectionPanel1.setMode(ExperimentFileSelectionPanel.REFERENCE_EXPERIMENT);
        }
        this.pack();
    }//GEN-LAST:event_referenceExperimentCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addExperimentMetaDataButton;
    private com.compomics.pepshellstandalone.dataloading.ExperimentFileSelectionPanel experimentFileBasedExperimentSelectionPanel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox referenceExperimentCheckBox;
    private com.compomics.pepshellstandalone.dataloading.ReferenceFileExperimentSelectionPanel referenceFileBasedExperimentPanel1;
    // End of variables declaration//GEN-END:variables

}
