/*
 * Copyright 2014 Davy Maddelein.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.compomics.pepshellstandalone.dataviewing;

import com.compomics.pepshell.controllers.DAO.PDBDAO;
import com.compomics.pepshell.controllers.properties.PDBProperties;
import com.compomics.pepshell.model.enums.PDBPropertyEnum;
import java.awt.Graphics;
import java.io.IOException;
import org.biojava.nbio.structure.io.PDBFileReader;
import org.jmol.adapter.smarter.SmarterJmolAdapter;
import org.jmol.api.JmolAdapter;
import org.jmol.api.JmolSimpleViewer;
import org.jmol.api.JmolViewer;

/**
 *
 * @author Davy Maddelein
 */
class PdbViewPanel extends javax.swing.JPanel {

    private final JmolSimpleViewer viewer;
    private JmolAdapter jMolAdapter = new SmarterJmolAdapter();
    private PDBFileReader pdbr = new PDBFileReader();

    /**
     * Creates new form PdbViewPanel
     */
    public PdbViewPanel() {
        initComponents();
        viewer = JmolViewer.allocateSimpleViewer(this, jMolAdapter);
        if (PDBProperties.getInstance().getProperty(PDBPropertyEnum.FILELOCATION.getKey()).isEmpty()) {
            pdbr.setPath(System.getProperty("java.io.tmpdir"));
        } else {
            pdbr.setPath(PDBProperties.getInstance().getProperty(PDBPropertyEnum.FILELOCATION.getKey()));
        }
    }

    public void setPdbFile(String pdbName) throws IOException {
        //if (offlineMode){
        //viewer.openFile(PDBProperties.getInstance().getProperty(PDBPropertyEnum.FILELOCATION.getKey())+"/"+((String)PDBFileComboBox.getSelectedItem()));
        //} else{
        viewer.openStringInline(PDBDAO.getPdbFileInMem(pdbName));
        viewer.evalString(pdbName);
        viewer.evalString("wireframe off; spacefill off; cartoon on");
        //}
        this.repaint();
    }

    @Override
    public void paint(Graphics grphcs) {
        super.paint(grphcs);
        if (viewer != null) {
            viewer.renderScreenImage(grphcs, this.getWidth(), this.getHeight());
        }
        //To change body of generated methods, choose Tools | Templates.
    }
    
    public JmolSimpleViewer getViewer(){
        return viewer;
    }
    
    public void executeScript(String jmolScript){
        viewer.evalString(jmolScript);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
